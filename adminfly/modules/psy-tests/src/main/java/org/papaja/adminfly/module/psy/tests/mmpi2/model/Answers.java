package org.papaja.adminfly.module.psy.tests.mmpi2.model;


import java.util.Map;
import java.util.TreeMap;

import static org.papaja.adminfly.module.psy.tests.mmpi2.model.Answer.FALSE;
import static org.papaja.adminfly.module.psy.tests.mmpi2.model.Answer.TRUE;

@SuppressWarnings({"unused"})
public class Answers {

    public static final Answers F_ANSWERS = new Answers() {{
        add(TRUE, 4, 5, 10, 11, 13, 14, 15, 16, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 53, 56, 59, 61, 62, 64, 66, 67, 70, 72, 73, 74, 76, 77, 78, 82, 84, 85, 86, 87, 92, 94, 96, 97, 100, 102, 104, 106, 108, 109, 110, 111, 114, 117, 118, 121, 123, 124, 125, 126, 127, 130, 132, 133, 134, 138, 139, 140, 142, 145, 146, 147, 149, 151, 156, 157, 158, 159, 161, 167, 168, 171, 172, 179, 180, 181, 182, 184, 186, 187, 189, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 215, 216, 217, 218, 222, 224, 226, 227, 228, 232, 233, 236, 238, 239, 240, 241, 244, 245, 246, 247, 250, 251, 252, 256, 259, 261, 263, 266, 267, 268, 269, 271, 273, 275, 277, 278, 279, 282, 284, 286, 291, 292, 293, 295, 297, 298, 299, 301, 303, 304, 305, 307, 312, 316, 317, 320, 321, 324, 325, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 377, 383, 398, 401, 427, 436, 455, 467, 473, 549, 564);
        add(FALSE, 1, 2, 3, 6, 7, 8, 9, 12, 17, 18, 19, 20, 26, 30, 37, 39, 45, 51, 54, 55, 57, 60, 63, 65, 68, 69, 71, 75, 79, 80, 81, 83, 89, 90, 91, 93, 99, 101, 103, 105, 107, 112, 113, 115, 116, 119, 120, 122, 128, 129, 135, 136, 137, 141, 143, 144, 148, 150, 152, 153, 155, 160, 162, 163, 164, 165, 166, 169, 170, 173, 174, 175, 176, 177, 178, 183, 185, 188, 190, 192, 195, 196, 198, 199, 208, 213, 219, 220, 221, 223, 225, 229, 230, 231, 234, 235, 237, 243, 248, 249, 254, 255, 257, 258, 260, 262, 264, 265, 272, 274, 276, 280, 281, 283, 285, 287, 289, 294, 296, 300, 306, 309, 313, 319, 322, 327, 329, 330, 347, 348, 353, 371, 374, 391, 397, 400, 406, 415, 440, 446, 449, 450, 451, 461, 462, 469, 479, 481, 482, 501, 502, 521, 547);
    }};

    public static final Answers M_ANSWERS = new Answers() {{
        add(TRUE, 1, 4, 5, 10, 13, 14, 15, 16, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 549, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 564, 52, 53, 56, 59, 61, 62, 64, 66, 67, 69, 70, 72, 73, 74, 76, 77, 78, 82, 84, 85, 86, 87, 92, 94, 96, 97, 100, 102, 104, 106, 108, 109, 110, 111, 114, 117, 118, 121, 123, 124, 125, 126, 127, 130, 132, 134, 138, 139, 140, 142, 145, 146, 147, 149, 151, 156, 157, 158, 159, 161, 167, 168, 171, 172, 179, 180, 181, 182, 184, 186, 187, 189, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 215, 216, 217, 218, 222, 224, 226, 227, 228, 231, 232, 233, 236, 238, 239, 240, 241, 244, 245, 246, 247, 250, 251, 252, 256, 259, 261, 263, 266, 267, 268, 269, 271, 273, 275, 277, 278, 279, 282, 284, 286, 291, 292, 293, 295, 297, 298, 299, 301, 303, 304, 305, 307, 312, 316, 317, 320, 321, 324, 325, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 377, 383, 398, 401, 427, 436, 455, 467, 473);
        add(FALSE, 1, 2, 3, 6, 7, 8, 9, 521, 12, 15, 17, 18, 19, 20, 25, 26, 28, 30, 33, 547, 36, 37, 39, 45, 46, 51, 54, 55, 57, 58, 60, 63, 64, 65, 68, 71, 75, 79, 80, 81, 82, 83, 88, 89, 241242, 90, 91, 93, 95, 96, 98, 99, 101, 103, 105, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 160, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 185, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 201, 207, 208, 213, 214, 217, 219, 220, 221, 223, 225, 229, 230, 231, 234, 235, 237, 238, 243, 248, 249, 254, 255, 257, 258, 260, 262, 263, 264, 265, 267, 268, 270, 271, 272, 274, 276, 279, 280, 281, 283, 285, 287, 289, 292, 294, 296, 300, 306, 309, 313, 316, 319, 322, 327, 329, 330, 347, 348, 353, 359, 371, 374, 383, 391, 397, 398, 400, 406, 415, 440, 446, 449, 450, 451, 461, 462, 469, 479, 481, 482, 501, 502);
    }};

    private Map<Integer, Answer> answers = new TreeMap<>();

    private Answers() { }

    public void add(Answer answer, Integer... numbers) {
        for (Integer number : numbers) {
            answers.put(number, answer);
        }
    }

    public Answer getAnswer(Integer question) {
        return answers.get(question);
    }

    public Map<Integer, Answer> getAnswers() {
        return answers;
    }

    public boolean isCorrect(Integer question, Answer answer) {
        return getAnswer(question).equals(answer);
    }

}
